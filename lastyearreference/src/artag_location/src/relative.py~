#!/usr/bin/env python
import sys
import rospy

import numpy as np

from tf2_msgs.msg import TFMessage
import tf
import time

import math
from numpy.linalg import inv

from artag_location.msg import AT_Message

#def callback():
#	listener = tf.TransformListener()
#	print listener
#	if not rospy.is_shutdown():
#		try:
#			(trans,rot) = listener.lookupTransform('/ar_marker_2','/ar_marker_0',rospy.Time(0))
#			print trans
#			print rot
#		except (tf.LookupException, tf.ConnectivityException):
#			print('not ok')	


if __name__ == '__main__':
	rospy.init_node('artag_lcoation')
	#t_end = time.time() + 5
	#while time.time() < t_end:
	#print time.time()
	#callback()
	#rospy.Timer(rospy.Duration(5)

	callback()

	listener = tf.TransformListener()
	rate =  rospy.Rate(10.0)
	listener.waitForTransform('ar_marker_2','ar_marker_0',rospy.Time(0),rospy.Duration(4.0))
	while not rospy.is_shutdown():
                try:
			now = rospy.Time.now()
			listener.waitForTransform('ar_marker_2','ar_marker_0',rospy.Time(0),rospy.Duration(4.0))
			(trans,rot) = listener.lookupTransform('ar_marker_2', 'ar_marker_0', now)
			print trans
		# except:
		# 	continue

        rospy.spin()
"""
		#rate.sleep()
"""
